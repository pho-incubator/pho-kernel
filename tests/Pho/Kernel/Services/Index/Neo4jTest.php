<?php

/*
 * This file is part of the Pho package.
 *
 * (c) Emre Sokullu <emre@phonetworks.org>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Pho\Kernel\Services\Index;

use Pho\Kernel\TestCase;

class Neo4jTest extends TestCase 
{

    private $client;

    private function _connect() {
        $this->client = \GraphAware\Neo4j\Client\ClientBuilder::create()
            ->addConnection('bolt', 'bolt://neo4j:password@localhost:7687')
            ->build();
    }

    private function _index(\Pho\Lib\Graph\EntityInterface $entity) {
        // CREATE (:CLASS {id: ?, })
        //eval(\Psy\sh());
        if($entity instanceof \Pho\Lib\Graph\NodeInterface) {
            $cq = sprintf("MERGE (n:%s {udid: {udid}}) SET n = {infos}", $entity->label());
            $result = $this->client->run( $cq, [
                "udid" => (string) $entity->id(),
                "infos" => $entity->attributes()->toArray()
            ]);
        }
        elseif($entity instanceof \Pho\Lib\Graph\EdgeInterface) {
    
        }
        else {
          //
        }
    }

    public function testKernelService() {
        $index_service = $this->kernel->index();
        $this->assertInstanceOf($index_service, \Pho\Kernel\Services\Index\Adapters\Neo4j::class);
    }

    public function testX() {
        $this->assertTrue(true);
        return;
        $this->flushDBandRestart();
        $this->_connect();
        $u = new \PhoNetworksAutogenerated\User($this->kernel, $this->graph, "123456");
        $this->_index($u);
        $this->created[] = $u->id();
        $post = $u->post("my first post");
        $this->created[] = $post->id();
        $this->assertTrue(true);
    }  




}