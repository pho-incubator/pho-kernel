<?php

/*
 * This file is part of the Pho package.
 *
 * (c) Emre Sokullu <emre@phonetworks.org>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Pho\Kernel\Services\Index;

use Pho\Kernel\TestCase;

class Neo4jTest extends TestCase 
{

    private $client;

    public function testKernelService() {
        $this->assertInstanceOf(\Pho\Kernel\Services\Index\Adapters\Neo4j::class, $this->kernel->index());
    }

    public function testBasic() {
        $this->flushDBandRestart();
        $u = new \PhoNetworksAutogenerated\User($this->kernel, $this->graph, "123456");
        $about = "for testing purposes only";
        $u->setAbout($about);
        $res = $this->kernel->index()->query("MATCH(n {About: {about}}) RETURN n", ["about" => $about]);
        $this->assertEquals($res->firstRecord()->values()[0]->value("Birthday"), $u->getBirthday());
        $this->created[] = $u->id();
    }  

    public function testWithEdge() {
        $this->flushDBandRestart();
        $u = new \PhoNetworksAutogenerated\User($this->kernel, $this->graph, "123456");
        $content = "my first post";
        $post = $u->post($content);        
        $res = $this->kernel->index()->query("MATCH(n {Status: {content}}) RETURN n", ["content" => $content]);
        $this->assertEquals($res->firstRecord()->values()[0]->value("CreateTime"), $post->getCreateTime());
        $res = $this->kernel->index()->query("MATCH(t {udid: {tail}})-[e]->(h {udid: {head}}) RETURN e", ["tail" => (string) $u->id(), "head" => (string) $post->id()]);
        $this->assertEquals($res->firstRecord()->values()[0]->value("udid"), (string) $post->edges()->in()->current()->id());
        $this->created[] = $u->id();
        $this->created[] = $post->id();
        $this->created[] = $post->edges()->in()->current()->id();
    }  




}